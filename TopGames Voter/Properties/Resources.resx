<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        usi31/s/bzdFh3V41eoAAAAASUVORK5CYII=
</value>
  </data>
</root>